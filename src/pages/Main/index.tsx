import { FC, useEffect, useState } from "react";
import * as ST from './styled';
import {generateColors} from "@src/utils/colors";
import {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from "recharts";
import { calculateByT, ICalculateArgs, xCaptions } from "@src/utils/calculateStudy";
import { Settings } from '@src/pages/Main/components/Settings';
import { Payload } from 'recharts/types/component/DefaultLegendContent';

const DEFAULT_MATRIX = Array(31).fill(Array(31).fill(1));

const DEFAULT_ARGS: ICalculateArgs = {
  BPn: 5, // % выпускников-бакалавров на начало расчетного периода
  BPk: 5, // % выпускников-бакалавров на конец расчетного периода
  Bn: 5, // количество выпускников-бакалавров на начало расчетного периода
  Bk: 5, // количество выпускников-бакалавров на конец расчетного периода
  BS: 5, // общее количество выпускников-бакалавров
  MPn: 5, // % выпускников-магистров на начало расчетного периода
  MPk: 5, // % выпускников-магистров на конец расчетного периода
  Mn: 5, // количество выпускников-магистров на начало расчетного периода
  Mk: 5, // количество выпускников-магистров на конец расчетного периода
  MS: 5, // общее количество выпускников-магистров
  BV: 5, // количество выпускников-бакалавров, закончивших обучение в срок
  BC: 5, // количество выпускников-бакалавров, продолжающих обучение
  BZ: 5, // среднегодовое количество зачисленных бакалавров
  MV: 5, // количество выпускников-магистров, закончивших обучение в срок
  MC: 5, // количество выпускников-магистров, продолжающих обучение
  MZ: 5, // среднегодовое количество зачисленных магистров
  C: 5, // общее количество цитирований
  P: 5, // общее количество публикаций
  PT: 5, // количество публикаций по техническим дисциплинам
  PI: 5, // количество публикаций в области искусств
  PJ: 5, // количество междисциплинарных исследований
  PD: 5, // количество публикаций по патентам
  PS: 5, // прочие публикации
  G: 5, // исследовательские гранты от национальных и международных финансовых учреждений
  IG: 5, // гранты от научно-исследовательских советов и исследовательских фондов
  NG: 5, // гранты от благотворительных и других некоммерческих организаций
  F: 5, // общий объем финансирования вуза
  An: 5, // количество публикаций в области искусств на начало расчетного периода
  Ak: 5, // количество публикаций в области искусств на конец расчетного периода
  Vn: 5, // количество часто цитируемых публикаций на начало расчетного периода
  Vk: 5, // количество часто цитируемых публикаций на конец расчетного периода
  IDPn: 5, // количество междисциплинарных публикаций на начало расчетного периода
  IDPk: 5, // количество междисциплинарных публикаций на конец расчетного периода
  DPn: 5, // % постдоков на начало расчетного периода
  DPk: 5, // % постдоков на конец расчетного периода
  Dn: 5, // количество постдоков на начало расчетного периода
  Dk: 5, // количество постдоков на конец расчетного периода
  NPP: 5, // общее количество научно-педагогического персонала
  IB: 5, // доходы от научных исследований для промышленности и бизнеса
  IN: 5, // доходы от научных исследований для частных фондов, благотворительных и других некоммерческих организаций
  IL: 5, // доходы от лицензирования
  IPr: 5, // доходов от непрерывного профессионального развития
  IPt: 5, // общее кол-во доходов
  DS: 5, // совместные с другими организациями патенты
  DV: 5, // патенты, зарегистрированные вузом
  DP: 5, // прочие патенты
  JPn: 5, // количество патентов, ссылающихся на промышленные предприятия, на начало расчетного периода
  JPk: 5, // количество публикаций, ссылающихся на промышленные предприятия, на конец расчетного периода
  INn: 5, // количество малых инновационных предприятий на начало расчетного периода
  INk: 5, // количество малых инновационных предприятий на конец расчетного периода
  PPn: 5,// количество публикаций по патентам на начало расчетного периода
  PPk: 5,// количество публикаций по патентам на конец расчетного периода
  PBn: 5,// количество программ на иностранных языках для бакалавров на начало расчетного периода
  PBk: 5,// количество программ на иностранных языках для бакалавров на конец расчетного периода
  PB: 5,// общее количество программ на иностранных языках для бакалавров
  PMn: 5, // количество публикаций в области искусств на начало расчетного периода
  PMk: 5, // количество публикаций в области искусств на конец расчетного периода
  PM: 5, // общее количество публикаций
  IPn: 5, // % иностранных студентов на начало расчетного периода
  IPk: 5, // % иностранных студентов на конец расчетного периода
  In: 5, // количество иностранных студентов на начало расчетного периода
  Ik: 5, // количество иностранных студентов на конец расчетного периода
  S: 5, // общее количество студентов
  OPn: 5, // % студентов, участвующих в программах обмена на начало расчетного периода
  OPk: 5, // % студентов, участвующих в программах обмена на конец расчетного периода
  On: 5, // количество студентов, участвующих в программах обмена на начало расчетного периода
  Ok: 5, // количество студентов, участвующих в программах обмена на конец расчетного периода
  Jn: 5, // количество студентов, участвующих в международных программах на начало расчетного периода
  Jk: 5, // количество студентов, участвующих в международных программах на конец расчетного периода
  ISPn: 5, // % иностранных сотрудников на начало расчетного периода
  ISPk: 5, // % иностранных сотрудников на конец расчетного периода
  ISn: 5, // количество иностранных сотрудников на начало расчетного периода
  ISk: 5, // количество иностранных сотрудников на конец расчетного периода
  BRPn: 5, // % выпускников-бакалавров, работающих в регионе на начало расчетного периода
  BRPk: 5, // % выпускников-бакалавров, работающих в регионе на конец расчетного периода
  BRn: 5, // количество выпускников-бакалавров, работающих в регионе на начало расчетного периода
  BRk: 5, // количество выпускников-бакалавров, работающих в регионе на конец расчетного периода
  MRPn: 5, // % выпускников-магистров, работающих в регионе на начало расчетного периода
  MRPk: 5, // % выпускников-магистров, работающих в регионе на конец расчетного периода
  MRn: 5, // количество выпускников-магистров, работающих в регионе на начало расчетного периода
  MRk: 5, // количество выпускников-магистров, работающих в регионе на конец расчетного периода
  SRPn: 5, // % студентов, участвующих в программах обмена на начало расчетного периода
  SRPk: 5, // % студентов, участвующих в программах обмена на конец расчетного периода
  SRn: 5, // количество студентов, участвующих в программах обмена на начало расчетного периода
  SRk: 5, // количество студентов, участвующих в программах обмена на конец расчетного периода
  RPn: 5, // количество публикаций с одним и более соавтором, географически расположенном в том же регионе, на начало расчетного периода
  RPk: 5, // количество публикаций с одним и более соавтором, географически расположенном в том же регионе, на конец расчетного периода
  IR: 5, // доходы от научных исследований для промышленности и бизнеса в регионе
  NR: 5, // доходы от научных исследований для региональных частных источников
}

const DEFAULT_X = Array(31).fill(1);

const CustomTooltip = ({ active, payload, label }: any) => {
  console.log(payload, label, active)
  if (active && payload && payload.length) {
    return (
      <ST.TooltipContainer>
        {payload.map((it: any) => (
          <ST.TooltipText color={it.color}>{xCaptions[it.dataKey]} = {it.payload[it.dataKey]}</ST.TooltipText>
        ))}
      </ST.TooltipContainer>
    );
  }

  return null;
};

const Main: FC = () => {
    const [colors, setColors] = useState(generateColors(100));
    const [activeLegend, setActiveLegend] = useState<number>()
    const [matrix, setMatrix] = useState<number[][]>(DEFAULT_MATRIX);
    const [args, setArgs] = useState<ICalculateArgs>(DEFAULT_ARGS);
    const [x, setX] = useState<number[]>(DEFAULT_X);
    const [data, setData] = useState(calculateByT({
      args: DEFAULT_ARGS,
      x: DEFAULT_X,
      relations: DEFAULT_MATRIX,
    }));

  const onSave = (values: number[][]) => {
    setMatrix(values);
  }

  const onSaveArgs = (values: ICalculateArgs) => {
    setArgs(values);
  }

  const onSaveX = (values: number[]) => {
    setX(values);
  }

  const handleMouseEnter = (o: Payload) => {
    const { dataKey } = o;

    setActiveLegend(Number(dataKey));
  };

  const handleMouseLeave = () => {
    setActiveLegend(undefined);
  };

  useEffect(() => {
    setData(calculateByT({
      args,
      relations: matrix,
      x,
    }))
  }, [x, args, matrix]);

    return (
        <ST.Wrapper>
          <Settings
            onSave={onSave}
            currentSettings={matrix}
            params={args}
            onSaveParametrs={onSaveArgs}
            onSaveX={onSaveX}
            x={x}
          />
            <ResponsiveContainer width="100%" height="100%">
                <LineChart
                    width={500}
                    height={300}
                    data={data}
                    margin={{
                        top: 5,
                        right: 30,
                        left: 20,
                        bottom: 5,
                    }}
                >
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="time" />
                    <YAxis max={1} min={0} />
                    <Tooltip content={<CustomTooltip />} />
                    <Legend verticalAlign="top" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} />
                    {Array(31).fill(0).map((_, i) => (
                        <Line type="monotone" dataKey={i} stroke={colors[i]} max={1} min={0} strokeOpacity={typeof activeLegend === 'undefined' || activeLegend === i ? 1 : 0.1} />
                    ))}
                </LineChart>
            </ResponsiveContainer>
        </ST.Wrapper>
    )
}

export default Main
